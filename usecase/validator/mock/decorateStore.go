// Code generated by MockGen. DO NOT EDIT.
// Source: decorate.go

// Package mock_validator is a generated GoMock package.
package mock_validator

import (
	model "github.com/figment-networks/oasishub-indexer/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockdecorateStore is a mock of decorateStore interface
type MockdecorateStore struct {
	ctrl     *gomock.Controller
	recorder *MockdecorateStoreMockRecorder
}

// MockdecorateStoreMockRecorder is the mock recorder for MockdecorateStore
type MockdecorateStoreMockRecorder struct {
	mock *MockdecorateStore
}

// NewMockdecorateStore creates a new mock instance
func NewMockdecorateStore(ctrl *gomock.Controller) *MockdecorateStore {
	mock := &MockdecorateStore{ctrl: ctrl}
	mock.recorder = &MockdecorateStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockdecorateStore) EXPECT() *MockdecorateStoreMockRecorder {
	return m.recorder
}

// CreateOrUpdate mocks base method
func (m *MockdecorateStore) CreateOrUpdate(val *model.ValidatorAgg) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdate", val)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrUpdate indicates an expected call of CreateOrUpdate
func (mr *MockdecorateStoreMockRecorder) CreateOrUpdate(val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdate", reflect.TypeOf((*MockdecorateStore)(nil).CreateOrUpdate), val)
}

// FindBy mocks base method
func (m *MockdecorateStore) FindBy(key string, value interface{}) (*model.ValidatorAgg, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindBy", key, value)
	ret0, _ := ret[0].(*model.ValidatorAgg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindBy indicates an expected call of FindBy
func (mr *MockdecorateStoreMockRecorder) FindBy(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindBy", reflect.TypeOf((*MockdecorateStore)(nil).FindBy), key, value)
}
