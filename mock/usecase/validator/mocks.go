// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/figment-networks/oasishub-indexer/usecase/validator (interfaces: ValidatorAggStore)

// Package mock_validator is a generated GoMock package.
package mock_validator

import (
	model "github.com/figment-networks/oasishub-indexer/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockValidatorAggStore is a mock of ValidatorAggStore interface
type MockValidatorAggStore struct {
	ctrl     *gomock.Controller
	recorder *MockValidatorAggStoreMockRecorder
}

// MockValidatorAggStoreMockRecorder is the mock recorder for MockValidatorAggStore
type MockValidatorAggStoreMockRecorder struct {
	mock *MockValidatorAggStore
}

// NewMockValidatorAggStore creates a new mock instance
func NewMockValidatorAggStore(ctrl *gomock.Controller) *MockValidatorAggStore {
	mock := &MockValidatorAggStore{ctrl: ctrl}
	mock.recorder = &MockValidatorAggStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockValidatorAggStore) EXPECT() *MockValidatorAggStoreMockRecorder {
	return m.recorder
}

// CreateOrUpdate mocks base method
func (m *MockValidatorAggStore) CreateOrUpdate(arg0 *model.ValidatorAgg) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrUpdate indicates an expected call of CreateOrUpdate
func (mr *MockValidatorAggStoreMockRecorder) CreateOrUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdate", reflect.TypeOf((*MockValidatorAggStore)(nil).CreateOrUpdate), arg0)
}

// FindBy mocks base method
func (m *MockValidatorAggStore) FindBy(arg0 string, arg1 interface{}) (*model.ValidatorAgg, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindBy", arg0, arg1)
	ret0, _ := ret[0].(*model.ValidatorAgg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindBy indicates an expected call of FindBy
func (mr *MockValidatorAggStoreMockRecorder) FindBy(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindBy", reflect.TypeOf((*MockValidatorAggStore)(nil).FindBy), arg0, arg1)
}
