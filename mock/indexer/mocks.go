// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/figment-networks/oasishub-indexer/indexer (interfaces: SyncerTaskStore)

// Package mock_indexer is a generated GoMock package.
package mock_indexer

import (
	model "github.com/figment-networks/oasishub-indexer/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSyncerTaskStore is a mock of SyncerTaskStore interface
type MockSyncerTaskStore struct {
	ctrl     *gomock.Controller
	recorder *MockSyncerTaskStoreMockRecorder
}

// MockSyncerTaskStoreMockRecorder is the mock recorder for MockSyncerTaskStore
type MockSyncerTaskStoreMockRecorder struct {
	mock *MockSyncerTaskStore
}

// NewMockSyncerTaskStore creates a new mock instance
func NewMockSyncerTaskStore(ctrl *gomock.Controller) *MockSyncerTaskStore {
	mock := &MockSyncerTaskStore{ctrl: ctrl}
	mock.recorder = &MockSyncerTaskStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSyncerTaskStore) EXPECT() *MockSyncerTaskStoreMockRecorder {
	return m.recorder
}

// FindByHeight mocks base method
func (m *MockSyncerTaskStore) FindByHeight(arg0 int64) (*model.Syncable, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByHeight", arg0)
	ret0, _ := ret[0].(*model.Syncable)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByHeight indicates an expected call of FindByHeight
func (mr *MockSyncerTaskStoreMockRecorder) FindByHeight(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByHeight", reflect.TypeOf((*MockSyncerTaskStore)(nil).FindByHeight), arg0)
}
